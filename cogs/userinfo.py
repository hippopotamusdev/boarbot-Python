from discord import slash_command
import discord
import ezcord
from ezcord import View

class Userinfo(ezcord.Cog, emoji="<:info:1147664192325812406>"):

    @slash_command(description="–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    @discord.option("user",discord.Member,description="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ –∫–æ—Ç–æ—Ä–æ–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    async def user(self,ctx:discord.ApplicationContext, member:discord.Member=None):
        if member is None:
            member = ctx.author
        if member not in ctx.guild.members:
            await ctx.respond("–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",ephemeral=True)
            return
        if isinstance(member, discord.Member):  # √úberpr√ºfe, ob member ein Mitglied ist
            activities = []
            for activity in member.activities:
                if isinstance(activity, discord.Spotify):
                    txt = f'Spotify: [{activity.artist} - {activity.title}]({activity.track_url})'
                elif isinstance(activity, discord.Game):
                    txt = f'–ò–≥—Ä–∞–µ—Ç: {activity.name}'
                elif isinstance(activity, discord.Streaming):
                    txt = f'–¢—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç: [{activity.twitch_name} - {activity.game}]({activity.url})'
                elif isinstance(activity, discord.CustomActivity):
                    txt = f'Status: {activity.name}'
                else:
                    txt = f'{activity.name}: {activity.details}'
                activities.append(txt)
        rlist = []
        for role in member.roles:
            rlist.append(str(role.mention))
        rlist.reverse()
        embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {member.display_name}", color=0x5965f2)
        embed.add_field(name="Username:", value=f"{member}")
        embed.add_field(name="–ü—Å–µ–≤–¥–æ–Ω–∏–º:", value=f"{member.nick}" if member.nick else "–Ω–µ –∏–º–µ–µ—Ç –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞",inline=True)
        embed.add_field(name="–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è:", value=f"{member.display_name}")
        embed.add_field(name="hex –∫–æ–¥ –±–∞–Ω–Ω–µ—Ä–∞:", value=f"{member.colour}")
        embed.add_field(name="–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ:", value=f"{member.mention}")
        embed.add_field(name='–°—Ç–∞—Ç—É—Å:', value=member.status, inline=False)
        embed.add_field(name="–ë—É—Å—Ç–µ—Ä:", value=f"–î–∞<t:{int(member.premium_since.timestamp())}:F>" if member.premium_since else "–ù–µ—Ç")
        embed.add_field(name="–í—ã—Å—à–∞—è —Ä–æ–ª—å:", value=f"{member.top_role.mention}")
        embed.add_field(name="–ë–æ—Ç:", value=f'{("Ja" if member.bot else "Nein")}')
        embed.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", value=f"<t:{int(member.joined_at.timestamp())}:F>")
        embed.add_field(name="–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –¥–∏—Å–∫–æ—Ä–¥–µ:", value=f"<t:{int(member.created_at.timestamp())}:F>")
        embed.add_field(name=f"–†–æ–ª–∏: {len(member.roles) - 1}", value=','.join(rlist),inline=False)
        embed.add_field(name="–ó–∞–º—å—é—á–µ–Ω?",value=f"–î–∞" if member.timed_out else "–ù–µ—Ç")
        banner_user = await self.bot.fetch_user(member.id)
        try:
            embed.set_image(url=banner_user.banner.url)
        except AttributeError:
            pass
        if activities:
            embed.add_field(name='–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π', inline=False, value='\n'.join(activities))
        embed.set_author(name=f"{member}", icon_url=f"{member.display_avatar}")
        embed.set_thumbnail(url=member.display_avatar)
        embed.set_footer(text=f'–ó–∞–ø—Ä–æ—à–µ–Ω–Ω–æ –æ—Ç {ctx.user.name} ‚Ä¢ {ctx.user.id}', icon_url=ctx.user.display_avatar)
        await ctx.respond(embed=embed,view=Userbutton(self,ctx,member,ctx.user))


def setup(bot: discord.Bot):
    bot.add_cog(Userinfo(bot))

class Userbutton(View):
    def __init__(self,bot,ctx,member,user) -> None:
        self.bot = bot
        self.ctx = ctx
        self.member = member
        self.user = user
        super().__init__(timeout=None)
    
    @discord.ui.button(label="üî∞ –î–æ–º–æ–π", style=discord.ButtonStyle.green, custom_id="info")
    async def info(self, button,ctx: discord.Interaction):
        if self.member is None:
            self.member = self.ctx.author
        if isinstance(self.member, discord.Member):
            activities = []
            for activity in self.member.activities:
                if isinstance(activity, discord.Spotify):
                    txt = f'Spotify: [{activity.artist} - {activity.title}]({activity.track_url})'
                elif isinstance(activity, discord.Game):
                    txt = f'–ò–≥—Ä–∞–µ—Ç: {activity.name}'
                elif isinstance(activity, discord.Streaming):
                    txt = f'–¢—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç: [{activity.twitch_name} - {activity.game}]({activity.url})'
                elif isinstance(activity, discord.CustomActivity):
                    txt = f'Status: {activity.name}'
                else:
                    txt = f'{activity.name}: {activity.details}'
                activities.append(txt)
        rlist = []
        for role in self.member.roles:
            rlist.append(str(role.mention))
        rlist.reverse()
        embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {member.display_name}", color=0x5965f2)
        embed.add_field(name="Username:", value=f"{member}")
        embed.add_field(name="–ü—Å–µ–≤–¥–æ–Ω–∏–º:", value=f"{member.nick}" if member.nick else "–Ω–µ –∏–º–µ–µ—Ç –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞",inline=True)
        embed.add_field(name="–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è:", value=f"{member.display_name}")
        embed.add_field(name="hex –∫–æ–¥ –±–∞–Ω–Ω–µ—Ä–∞:", value=f"{member.colour}")
        embed.add_field(name="–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ:", value=f"{member.mention}")
        embed.add_field(name='–°—Ç–∞—Ç—É—Å:', value=member.status, inline=False)
        embed.add_field(name="–ë—É—Å—Ç–µ—Ä:", value=f"–î–∞<t:{int(member.premium_since.timestamp())}:F>" if member.premium_since else "–ù–µ—Ç")
        embed.add_field(name="–í—ã—Å—à–∞—è —Ä–æ–ª—å:", value=f"{member.top_role.mention}")
        embed.add_field(name="–ë–æ—Ç:", value=f'{("Ja" if member.bot else "Nein")}')
        embed.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", value=f"<t:{int(member.joined_at.timestamp())}:F>")
        embed.add_field(name="–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –¥–∏—Å–∫–æ—Ä–¥–µ:", value=f"<t:{int(member.created_at.timestamp())}:F>")
        embed.add_field(name=f"–†–æ–ª–∏: {len(member.roles) - 1}", value=','.join(rlist),inline=False)
        embed.add_field(name="–ó–∞–º—å—é—á–µ–Ω?",value=f"–î–∞" if member.timed_out else "–ù–µ—Ç")
        try:
            embed.set_image(url=banner_user.banner.url)
        except AttributeError:
            pass
        if activities:
            embed.add_field(name='–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å', inline=False, value='\n'.join(activities))
        embed.set_thumbnail(url=self.member.display_avatar)
        await ctx.response.edit_message(embed=embed)

    
    @discord.ui.button(label="–ê–≤–∞—Ç–∞—Ä–∫–∞", style=discord.ButtonStyle.gray, custom_id="avatar")
    async def avatar(self, button,ctx: discord.ApplicationContext):
        if self.user.id != ctx.user.id:
            return await ctx.respond("–¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É",ephemeral=True)
        embed = discord.Embed(title="–ê–≤–∞—Ç–∞—Ä–∫–∞ {}".format(self.member.display_name))
        embed.set_image(url=self.member.display_avatar)
        await ctx.response.edit_message(embed=embed)
    
    @discord.ui.button(label="–ë–∞–Ω–Ω–µ—Ä", style=discord.ButtonStyle.blurple, custom_id="banner")
    async def banner(self, button,ctx: discord.Interaction):
        if self.user.id != ctx.user.id:
            return await ctx.respond("–¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É",ephemeral=True)
        
        embed = discord.Embed(title="–ë–∞–Ω–Ω–µ—Ä {}".format(self.member.display_name))
        if self.member.bot:
            embed.add_field(name=" ",value="–£ –±–æ—Ç–æ–≤ –Ω–µ—Ç –±–∞–Ω–Ω–µ—Ä–∞")
            return await ctx.response.edit_message(embed=embed)
        banner_user = await ctx.client.fetch_user(self.member.id)
        try:
            embed.set_image(url=banner_user.banner.url)
        except AttributeError:
            embed.add_field(name=" ",value="–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –±–∞–Ω–Ω–µ—Ä–∞")
        await ctx.response.edit_message(embed=embed)

    @discord.ui.button(label="–ü—Ä–∞–≤–∞", style=discord.ButtonStyle.red, custom_id="berechtigungen")
    async def berechtigungen(self, button,ctx: discord.ApplicationContext):
        if self.user.id != ctx.user.id:
            return await ctx.respond("–¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É",ephemeral=True)
        
        embed = discord.Embed(title="–ü—Ä–∞–≤–∞ {}".format(self.member.display_name))
        embed.add_field(name="–ü—Ä–∞–≤–∞",value=",".join([str(perm[0]) for perm in self.member.guild_permissions if perm[1]]))
        await ctx.response.edit_message(embed=embed)


    @discord.ui.button(label="–†–æ–ª–∏", style=discord.ButtonStyle.blurple, custom_id="Rollen")
    async def rollen(self, button,ctx: discord.ApplicationContext):
        if self.user.id != ctx.user.id:
            return await ctx.respond("–¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É",ephemeral=True)
        rlist = []
        for role in self.member.roles:
            if role.name == "@everyone":
                continue
            rlist.append(str(role.mention))
        embed = discord.Embed(title="–†–æ–ª–∏ {}".format(self.member.display_name))
        if len(rlist) == 0:
            embed.add_field(name="–†–æ–ª–∏",value="–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–æ–ª–µ–π")
            return await ctx.response.edit_message(embed=embed)
        embed.add_field(name=f"–†–æ–ª–∏: {len(self.member.roles) - 1}", value=','.join(rlist),inline=False)

        await ctx.response.edit_message(embed=embed)